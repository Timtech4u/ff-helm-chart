# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The desired number of pod
replicaCount: 1

labels: {}
# my-company: my-value

image:
  # -- Full image address
  url: nginx:latest
  pullPolicy: IfNotPresent
  # -- command to be used
  command: []
  # -- args to be used with command
  args: []

imagePullSecrets:
  # -- Secret to pull image
  - name: regsec

# -- list of ports to be exposed
ports: []
# - name: http
#   number: 80

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes Service type to be created. Use this default value to expose the service via ingress-nginx
  type: ClusterIP

ingress:
  # -- Enable ingress creation
  enabled: false
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/tls-acme: "true"
  hosts:
    # -- Public endpoint to access the service
    - host: chart-example.local
      paths:
        # -- Path to be exposed
        - path: /
          pathType: ImplementationSpecific
          # -- Target exposed port
          port: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    # -- Configure CPU limits for the pod.
    cpu: 200m
    # -- Configure Memory limit for the pod. This is the hard limit resources, so whenever your application uses more than the limit, it could throw OOM error.
    memory: 256Mi
  requests:
    # -- Configure CPU request for the pod.
    cpu: 100m
    # -- Configure Memory request for the pod.
    memory: 128Mi

autoscaling:
  # -- Enable Horizontal Pod Auto Scaling
  enabled: false
  # -- Auto scaling minimum number of pod
  minReplicas: 1
  # -- Auto scaling maximum number of pod
  maxReplicas: 5
  # -- Metrics to be used for deciding whether the pod should be upscaled or not.
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- External secret to be pulled and used for the deployment
secrets: {}
# name: secret-name
# backend: gcpSecretsManager
# projectId: fireflies-ai
# values:
# - key: key-on-secret-manager
#   name: secret-data-name

# -- Configure how long the termination period (t)
terminationGracePeriodSeconds : 30

probes:
  liveness:
    # -- Enable liveness probes
    enabled: false
    # -- livenes probes target path
    path: /
    # -- liveness probes target port
    port: 80
  readiness:
    # -- Enable readiness probes
    enabled: false
    # -- readiness probes target path
    path: /
    # -- readiness probes target port
    port: 80

backendConfig:
  # -- Enable Backend Config
  enabled: false
  port: 3000